# dbbackup configuration file.
# !!! WARNING !!!
# This file may contain usernames and passwords for database users
# with all the privelages needed to backup (copy) all of your
# databases.  Please make sure the permissions on this file are
# as exclusive as possible.
#
#
# File Format:
# # to the end of line are comments. These are stripped and never
#	 processed.
# Blank lines are ignored.
# ${foo} or $foo\W are variables.  The value if taken from the key
# 	'foo' in the current section, the default section or 
#	environment variable of the same name in that order. If no
#	value is found the empty string is substituted.
#	Yes, you could make this recurse and break things.  But
# 	then you get to keep all of the pieces.
# key1=value1	add key1 with value1 to the current section.
# key1=value2	a key repeated in the same section turns the values 
#	into a list.
# identifier	an identifier (no equals sign) start a new section.  
#	key=value pairs before the first section header go into the
#	#default section.
# No, you cannot create identifiers starting with a #.  They would 
# be stripped out as comments.  That is why such keys are used for
# internal purposes.
#
# The key confdir (variable $confdir) is set to the directory this
# configuration file is found in.
# 



# Default backup choice. This is used as an identifier (eg. daily
# , weekly etc) in logfiles and output names.
choice=daily
# Default root of the backup tree - where logs, output etc should go
root=$HOME/tmp/backup
# Where lock files should be created.
lockdir=$root/lock
# Where logfiles will be put.
logdir=$root/log
# Where backup output will be put.
dumpdir=$root/dump

# A section identified as mysql-1.
mysql1

# The type of database being backed up.  We don't guess this, you
have to tell us.  mysql|psql|postgres are the currently valid value.
db=mysql

# Ignore (ie do not backup) the DB identified in this section if set to true.
ignore=true

# Override the default dumpdir with a section specific location.
dumpdir=$root/mysql

# The database host to connect to 
host=mysql.localhost.localdomain

# A DB user with necessary backup privelages.
user=superduperuser

# The users password.
password=supersecretpassword

# dbname can be used to give an explicit list of databases to backup.
# If no dbname are given the database itself will be queried for a list.
#dbname=database1
#dbname=database2
#dbname=database3

# A section identified as psql1
psql1
db=psql
dumpdir=$root/psql
host=psql.localhost.localdomain
user=postgres
# Postgres uses a password file rather than passing passwords on the command line.
# pgpassfile should point to a suitable file.
pgpassfile=$confdir/pgpass

